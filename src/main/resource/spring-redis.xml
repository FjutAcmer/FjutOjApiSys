<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!--1引入配置信息-->
    <context:property-placeholder location="classpath*:redis-config.properties" ignore-unresolvable="true"/>

    <!--2配置redis,相当于实例化了jedis的配置-->
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="${redis.maxIdle}"/>
        <property name="maxWaitMillis" value="${redis.maxWait}"/>
        <property name="testOnBorrow" value="${redis.testOnBorrow}"/>
    </bean>

    <!--3获取redis的连接工厂-->
    <bean id="JedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
          p:host-name="${redis.host}" p:password="${redis.pass}" p:port="${redis.port}" p:poolConfig-ref="poolConfig"/>

    <!--获取redisTemplate,template需要redis连接工厂，并配置序列化格式-->
    <bean id="redisTemplate"
          class="org.springframework.data.redis.core.RedisTemplate"
          p:defaultSerializer-ref="stringRedisSerializer">
        <property name="connectionFactory" ref="JedisConnectionFactory"/>

    </bean>

    <!-- 配置Redis的序列化格式为字符串   -->
    <bean id="stringRedisSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer"></bean>

</beans>
